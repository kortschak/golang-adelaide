Sisyphus
A package for building sysfs-like file systems that do nothing

Dan Kortschak
Golang Adelaide


* Toys

* EV3

.image sisyphus/images/ev3_turtle.jpeg 500 _

* Programming

LabVIEW EV3-G

.image sisyphus/images/ev3-g.jpeg 450 _

* ev3dev

ev3dev is a Debian Linux-based operating system that runs on several LEGO® MINDSTORMS compatible platforms including the LEGO® MINDSTORMS EV3 and similar platforms.

.image sisyphus/images/logo_ev3dev_mono.png
.caption [[https://www.ev3dev.org/][www.ev3dev.org]]

* ev3go

.image sisyphus/images/gopherbrick.png 300 _

The ev3go packages are the Go language binding for ev3dev system.

Essentially a thin wrapper around the `/sysfs/class` file systems that ev3dev provides to control sensors and motors.

* ev3go

.iframe https://godoc.org/github.com/ev3go/ev3dev 550 960

* Testing

* How to test the correctness of the sysfs interface shim?

There is [[https://github.com/ev3go/ev3dev/blob/master/linear_actuator.go][lots]] [[https://github.com/ev3go/ev3dev/blob/master/sensor.go][of]] [[https://github.com/ev3go/ev3dev/blob/master/tacho_motor.go][boring]] [[https://github.com/ev3go/ev3dev/blob/master/servo_motor.go][code]] that calls a kernel of [[https://github.com/ev3go/ev3dev/blob/master/ev3dev.go][sysfs- and ev3dev]]-aware functions.

Run integration tests on an EV3 for each PR?

Devise a reasonable simulation of the device that can run anywhere?


* Sisyphus

He was punished for his self-aggrandizing craftiness and deceitfulness by being forced to roll an immense boulder up a hill only for it to roll down when it nears the top, repeating this action for eternity. Through the classical influence on modern culture, tasks that are both laborious and futile are therefore described as Sisyphean.

.image sisyphus/images/titian_sisyphus.jpg 350 _


* FUSE

Filesystem in Userspace provides a way to mock the /sysfs/class file system on testing infrastructure.

From WP:

FUSE is particularly useful for writing virtual file systems. Unlike traditional file systems that essentially work with data on mass storage, virtual filesystems don't actually store data themselves. They act as a view or translation of an existing file system or storage device.

*In*principle,*any*resource*available*to*a*FUSE*implementation*can*be*exported*as*a*file*system.*

There is a FUSE package for Go, originally base on the FUSE library by Russ Cox.

* bazil.org/fuse

.iframe https://godoc.org/bazil.org/fuse 550 960


* ev3go/sisyphus

* ev3go/sisyphus

.iframe https://godoc.org/github.com/ev3go/sisyphus 500 960

This allows you to write code [[https://github.com/ev3go/sisyphus/blob/5542215c6c83206bc738c3b47feabebc1f4ec18b/sisyphus_test.go#L48-L103][like this]].

* Caveats

There is a potential for [[https://github.com/ev3go/ev3dev/blob/master/tacho_motor_test.go][a lot of boiler plate]].

Incorrect use of locks will hang your kernel!
